# Docker Compose for Production Odoo + OCA + Supabase
version: '3.8'

services:
  odoo:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: odoo_production
    environment:
      # Supabase Configuration
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      
      # PostgreSQL Connection  
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_URL_NON_POOLING=${POSTGRES_URL_NON_POOLING}
      
      # Odoo Database Connection (local PostgreSQL for Odoo internal)
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo
      - PORT=5432
    ports:
      - "8069:8069"
      - "8072:8072"
    volumes:
      - odoo-data:/var/lib/odoo
      - ./config/odoo.conf:/etc/odoo/odoo.conf:ro
      - ./addons:/mnt/extra-addons
      - ./oca:/mnt/oca:ro
    depends_on:
      - db
      - redis
    networks:
      - odoo-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15-alpine
    container_name: odoo_postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - odoo-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: odoo_redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - odoo-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: odoo_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - odoo
    networks:
      - odoo-network
    restart: unless-stopped

volumes:
  odoo-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  odoo-network:
    driver: bridge
