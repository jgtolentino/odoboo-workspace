user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=ocr_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=agent_limit:10m rate=30r/s;

    # Upstream services
    upstream ocr_backend {
        server ocr-service:8000;
    }

    upstream agent_backend {
        server agent-service:8001;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name insightpulseai.net www.insightpulseai.net;

        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTP server for IP access (no redirect)
    server {
        listen 80 default_server;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # OCR Service
        location /ocr/ {
            limit_req zone=ocr_limit burst=20 nodelay;

            proxy_pass http://ocr_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for OCR processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Agent Service
        location /agent/ {
            limit_req zone=agent_limit burst=50 nodelay;

            proxy_pass http://agent_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for agent processing
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Direct access to services (for debugging)
        location /direct/ocr/ {
            proxy_pass http://ocr_backend/;
        }

        location /direct/agent/ {
            proxy_pass http://agent_backend/;
        }

        # Root path
        location / {
            return 200 '{"status":"ok","services":["ocr","agent"],"endpoints":["/ocr/","/agent/"]}\n';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server for insightpulseai.net
    server {
        listen 443 ssl http2;
        server_name insightpulseai.net www.insightpulseai.net;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/insightpulseai.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/insightpulseai.net/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # OCR Service
        location /ocr/ {
            limit_req zone=ocr_limit burst=20 nodelay;

            proxy_pass http://ocr_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for OCR processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Agent Service
        location /agent/ {
            limit_req zone=agent_limit burst=50 nodelay;

            proxy_pass http://agent_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts for agent processing
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Direct access to services (for debugging)
        location /direct/ocr/ {
            proxy_pass http://ocr_backend/;
        }

        location /direct/agent/ {
            proxy_pass http://agent_backend/;
        }

        # Root path
        location / {
            return 200 '{"status":"ok","services":["ocr","agent"],"endpoints":["/ocr/","/agent/"],"domain":"insightpulseai.net"}\n';
            add_header Content-Type application/json;
        }
    }
}
