import { createClient } from '@supabase/supabase-js';

export const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

// Database types will be generated by Supabase CLI
// For now, we'll define basic types manually
export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[];

export interface Database {
  public: {
    Tables: {
      work_queue: {
        Row: {
          id: string;
          kind: string;
          status: string;
          prompt_json: Json;
          created_at: string;
          claimed_by: string | null;
          claimed_at: string | null;
          completed_at: string | null;
        };
        Insert: {
          id?: string;
          kind: string;
          status?: string;
          prompt_json: Json;
          created_at?: string;
          claimed_by?: string | null;
          claimed_at?: string | null;
          completed_at?: string | null;
        };
        Update: {
          id?: string;
          kind?: string;
          status?: string;
          prompt_json?: Json;
          created_at?: string;
          claimed_by?: string | null;
          claimed_at?: string | null;
          completed_at?: string | null;
        };
      };
      work_queue_comment: {
        Row: {
          id: string;
          work_queue_id: string;
          author_kind: 'user' | 'assistant' | 'cline' | 'system';
          author_id: string | null;
          message: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          work_queue_id: string;
          author_kind: 'user' | 'assistant' | 'cline' | 'system';
          author_id?: string | null;
          message: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          work_queue_id?: string;
          author_kind?: 'user' | 'assistant' | 'cline' | 'system';
          author_id?: string | null;
          message?: string;
          created_at?: string;
        };
      };
    };
  };
}
