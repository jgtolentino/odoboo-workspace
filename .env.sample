# ============================================================================
# ODOBOO WORKSPACE - ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env, .env.production, or .env.staging to git!
# ============================================================================

# ============================================================================
# üîê SECURITY WARNING
# ============================================================================
# This file contains SAMPLE values only. Replace ALL values before use.
# Rotate secrets immediately if accidentally committed to git.
# Use GitHub Secrets for CI/CD: Settings ‚Üí Secrets ‚Üí Actions
# ============================================================================

# ============================================================================
# 1. CORE CONFIGURATION
# ============================================================================

ENVIRONMENT=development  # Options: development, staging, production
DEBUG=false
LOG_LEVEL=info  # Options: debug, info, warn, error

# ============================================================================
# 2. NEXT.JS / SUPABASE DATABASE (Migration Runner Target)
# ============================================================================
# These are used by scripts/run-migrations.js and the Next.js app
# Get these from: https://supabase.com/dashboard/project/_/settings/database

# Supabase Project URL
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co

# Supabase Anonymous Key (safe for client-side)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your_anon_key_here

# Supabase Service Role Key (KEEP SECRET - server-side only)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.your_service_role_key_here

# Supabase JWT Secret
SUPABASE_JWT_SECRET=your_jwt_secret_from_supabase_dashboard

# Database URLs (for migration runner)
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://postgres.your-ref:your-password@aws-0-region.pooler.supabase.com:5432/postgres
STAGING_DATABASE_URL=postgresql://postgres.staging-ref:staging-password@aws-0-region.pooler.supabase.com:5432/postgres
PROD_DATABASE_URL=postgresql://postgres.prod-ref:prod-password@aws-0-region.pooler.supabase.com:5432/postgres

# Direct PostgreSQL Connection (non-pooling, for migrations)
POSTGRES_HOST=db.your-project-ref.supabase.co
POSTGRES_DATABASE=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_database_password
POSTGRES_URL_NON_POOLING=postgresql://postgres.your-ref:your-password@aws-0-region.pooler.supabase.com:5432/postgres

# ============================================================================
# 3. ODOO CONFIGURATION (Separate Database)
# ============================================================================
# Odoo uses its own database, NOT the same as Next.js/Supabase
# Odoo database changes use module upgrades, NOT the migration runner

# Admin master password (used for database operations)
ODOO_ADMIN_PASSWORD=your-strong-admin-password-here

# Database Configuration
DB_HOST=db  # For local: db | For Supabase: aws-1-region.pooler.supabase.com
DB_PORT=5432
DB_NAME=odoo_production  # Different database than Next.js!
DB_USER=odoo  # For local | For Supabase: postgres.your-ref
DB_PASSWORD=your-secure-odoo-password
DB_MAXCONN=64

# Odoo Database Name (for docker-compose environment variable)
ODOO_DATABASE_NAME=odoo_production

# ============================================================================
# 4. DIGITALOCEAN CONFIGURATION
# ============================================================================
# For OCR service and droplet deployment

# DigitalOcean API Token
DO_ACCESS_TOKEN=dop_v1_your_digitalocean_token_here

# Container Registry
DO_REGISTRY=your-registry-name
DO_REGISTRY_URL=registry.digitalocean.com/your-registry-name

# Droplet Configuration
DO_DROPLET_IP=your.droplet.ip.address
DO_DROPLET_ID=your_droplet_id

# Spaces (S3-compatible storage)
DO_SPACES_ACCESS_KEY=your_spaces_access_key
DO_SPACES_SECRET_KEY=your_spaces_secret_key
DO_SPACES_BUCKET=odoboo-files
DO_SPACES_REGION=nyc3  # Options: nyc3, sfo3, sgp1, fra1, etc.
DO_SPACES_ENDPOINT=https://nyc3.digitaloceanspaces.com

# Domain Configuration
DOMAIN=odoboo.yourdomain.com
OCR_SERVICE_DOMAIN=ocr.yourdomain.com

# ============================================================================
# 5. EMAIL CONFIGURATION
# ============================================================================

EMAIL_PROVIDER=smtp  # Options: smtp, sendgrid, aws_ses, mailgun
DEFAULT_FROM_EMAIL=noreply@odoboo.com

# SMTP Settings (e.g., Gmail, Outlook, custom)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587  # 587 for TLS, 465 for SSL, 25 for unencrypted
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password
SMTP_ENCRYPTION=starttls  # Options: starttls, ssl, none

# SendGrid (if using SendGrid)
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# AWS SES (if using AWS SES)
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
AWS_REGION=us-east-1

# ============================================================================
# 6. STORAGE CONFIGURATION
# ============================================================================

STORAGE_BACKEND=local  # Options: local, s3, minio, digitalocean_spaces

# MinIO (for local development)
MINIO_USER=minioadmin
MINIO_PASSWORD=minioadmin
MINIO_ENDPOINT=http://minio:9000

# ============================================================================
# 7. REDIS CONFIGURATION (Optional - for caching/sessions)
# ============================================================================

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ============================================================================
# 8. ODOO WORKERS CONFIGURATION
# ============================================================================

WORKERS=4  # Number of worker processes (0 for dev mode)
MAX_CRON_THREADS=2
LIMIT_MEMORY_HARD=2684354560  # 2.5 GB
LIMIT_MEMORY_SOFT=2147483648  # 2 GB
LIMIT_REQUEST=8192
LIMIT_TIME_CPU=600  # 10 minutes
LIMIT_TIME_REAL=1200  # 20 minutes

# ============================================================================
# 9. SECURITY
# ============================================================================

# Secret key for cryptographic signing (generate with: openssl rand -base64 32)
SECRET_KEY=generate-a-long-random-string-here-min-32-chars

# Allowed hosts (comma-separated)
ALLOWED_HOSTS=localhost,127.0.0.1,odoboo.yourdomain.com

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=https://app.yourdomain.com,https://yourdomain.com

# SSL/HTTPS Configuration (set to true in production)
SECURE_SSL_REDIRECT=false
SESSION_COOKIE_SECURE=false
CSRF_COOKIE_SECURE=false

# ============================================================================
# 10. API CONFIGURATION
# ============================================================================

# Migration API Authentication
INTERNAL_ADMIN_TOKEN=generate-secure-token-for-migration-api

# External API Configuration
API_RATE_LIMIT=100/hour
API_KEY=your-api-key-for-external-services
WEBHOOK_SECRET=your-webhook-secret

# ============================================================================
# 11. MONITORING & OBSERVABILITY (Optional)
# ============================================================================

# Sentry (error tracking)
SENTRY_DSN=https://your_key@sentry.io/project_id

# New Relic (APM)
NEW_RELIC_LICENSE_KEY=your_new_relic_key

# ============================================================================
# 12. DEVELOPMENT & TESTING (Local Only)
# ============================================================================

DEV_MODE=false  # Set to true for Odoo dev mode
HOT_RELOAD=false  # Set to true for auto-reload on file changes

# ============================================================================
# 13. GITHUB ACTIONS SECRETS (Set in GitHub repo settings)
# ============================================================================
# These should be configured in: Settings ‚Üí Secrets ‚Üí Actions
# DO NOT put real values here - this is just documentation
#
# Required secrets:
# - STAGING_DATABASE_URL          (Supabase staging database)
# - PROD_DATABASE_URL             (Supabase production database)
# - NEXT_PUBLIC_SUPABASE_URL      (For Next.js builds)
# - SUPABASE_SERVICE_ROLE_KEY     (For server-side operations)
# - DO_ACCESS_TOKEN               (For DigitalOcean deployments)
# - INTERNAL_ADMIN_TOKEN          (For migration API authentication)
#
# Optional secrets:
# - ROLLBACK_ALLOWED=true         (Allow rollback in workflows)
# - CONFIRM_PRODUCTION_MIGRATION=true  (Bypass manual confirmation)
# ============================================================================

# ============================================================================
# 14. OCR SERVICE CONFIGURATION
# ============================================================================

# OCR Service URL (deployed on DigitalOcean droplet)
OCR_SERVICE_URL=http://188.166.237.231:8000
OCR_API_ENDPOINT=http://188.166.237.231:8000/ocr

# OCR Processing Thresholds
OCR_CONFIDENCE_THRESHOLD=0.60
VISUAL_DIFF_THRESHOLD=0.95

# OpenAI API Key (for OCR enhancement and AI features)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your_openai_api_key_here

# MCP Admin Token (for write operations via HTTP gateway)
# Generate with: openssl rand -base64 32
MCP_ADMIN_TOKEN=your_mcp_admin_token_here

# ============================================================================
# QUICK REFERENCE
# ============================================================================
#
# After copying this file to .env:
# 1. Replace ALL placeholder values
# 2. Never commit .env to git (it's in .gitignore)
# 3. Use different values for development, staging, and production
# 4. Set GitHub Secrets for CI/CD workflows
# 5. Rotate secrets if accidentally exposed
#
# For database migrations (Next.js/Supabase only):
#   DATABASE_URL=<your_url> node scripts/run-migrations.js
#
# For Odoo module upgrades (Odoo database only):
#   docker exec odoo18 odoo -d odoo_production -u module_name
#
# ============================================================================
