user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ocr_limit:10m rate=2r/s;

    # Upstream definitions
    upstream odoo {
        server odoo:8069;
    }

    upstream ocr {
        server ocr-service:8000;
    }

    upstream agents {
        server agent-service:8001;
    }

    # Main Odoo domain
    server {
        listen 80;
        listen [::]:80;
        server_name insightpulseai.net;

        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name insightpulseai.net;

        # SSL certificates (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/insightpulseai.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/insightpulseai.net/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Proxy to Odoo
        location / {
            proxy_pass http://odoo;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Longpolling for Odoo
        location /longpolling {
            proxy_pass http://odoo:8072;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # OCR subdomain
    server {
        listen 80;
        listen [::]:80;
        server_name ocr.insightpulseai.net;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ocr.insightpulseai.net;

        ssl_certificate /etc/letsencrypt/live/ocr.insightpulseai.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ocr.insightpulseai.net/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Rate limiting for OCR
        location / {
            limit_req zone=ocr_limit burst=5 nodelay;

            proxy_pass http://ocr;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeout for OCR processing
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
    }

    # Agents subdomain
    server {
        listen 80;
        listen [::]:80;
        server_name agents.insightpulseai.net;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name agents.insightpulseai.net;

        ssl_certificate /etc/letsencrypt/live/agents.insightpulseai.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/agents.insightpulseai.net/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Rate limiting for agents
        location / {
            limit_req zone=api_limit burst=20 nodelay;

            proxy_pass http://agents;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeout for agent processing
            proxy_read_timeout 120s;
            proxy_connect_timeout 10s;
        }
    }
}
