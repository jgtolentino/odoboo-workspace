version: '3.8'

services:
  # OCR Service (PaddleOCR-VL + OpenAI)
  ocr-service:
    build:
      context: ./services/ocr-service
      dockerfile: Dockerfile
    container_name: ocr-service
    restart: unless-stopped
    ports:
      - '8000:8000'
    environment:
      - OCR_SPACE_API_KEY=${OCR_SPACE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OCR_IMPL=paddleocr-vl
      - MIN_CONFIDENCE=0.60
    volumes:
      - ocr-uploads:/app/uploads
    networks:
      - services-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Agent Service (Multi-capability AI agent)
  agent-service:
    build:
      context: ./services/agent-service
      dockerfile: Dockerfile
    container_name: agent-service
    restart: unless-stopped
    ports:
      - '8001:8001'
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    volumes:
      - agent-temp:/tmp
    networks:
      - services-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: services-nginx
    restart: unless-stopped
    ports:
      - '8080:80'
      - '8443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-ssl:/etc/nginx/ssl
    networks:
      - services-network
    depends_on:
      - ocr-service
      - agent-service
    healthcheck:
      test: ['CMD', 'nginx', '-t']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  ocr-uploads:
    driver: local
  agent-temp:
    driver: local
  nginx-ssl:
    driver: local

networks:
  services-network:
    driver: bridge
