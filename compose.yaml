services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  odoo:
    build: ./docker/odoo
    command: ["odoo", "-c", "/etc/odoo/odoo.conf", "--longpolling-port", "8072"]
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      # PostgreSQL credentials for entrypoint script
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: insightpulseai.net
      # Odoo database connection (overrides odoo.conf)
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: insightpulseai.net
    expose:
      - "8069"
      - "8072"
    volumes:
      - odoo-data:/var/lib/odoo
      - ./config/odoo/odoo.conf:/etc/odoo/odoo.conf:ro
      - ./addons/custom:/mnt/extra-addons/custom:ro
      - ./addons/oca:/mnt/extra-addons/oca:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    extra_hosts:
      - "odoo.com:127.0.0.1"
      - "www.odoo.com:127.0.0.1"
      - "services.odoo.com:127.0.0.1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.odoo.rule=Host(`insightpulseai.net`)"
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.tls.certresolver=letsencrypt"
      - "traefik.http.services.odoo.loadbalancer.server.port=8069"
      - "traefik.http.routers.odoo.middlewares=rate-login@file,security-headers@file"
    restart: unless-stopped

  traefik:
    image: traefik:v3.1
    command:
      - "--api.dashboard=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./docker/traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml:ro"
      - "traefik-certs:/letsencrypt"
    restart: unless-stopped

volumes:
  db-data:
  odoo-data:
  traefik-certs:
