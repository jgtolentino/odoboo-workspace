name: Deploy Odoo 18.0 to DigitalOcean

on:
  workflow_dispatch: {}
  push:
    branches:
      - main  # Only run on main branch pushes
    tags: ['v*.*.*']    # deploy only on version tags
    paths:
      - 'infra/odoo/**'
      - 'scripts/install-modules.sh'
      - '.github/workflows/deploy-odoo.yml'

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: odoo18-oca

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if deployment is configured
        id: check_config
        run: |
          if [[ -z "${{ secrets.DO_ACCESS_TOKEN }}" ]]; then
            echo "configured=false" >> $GITHUB_OUTPUT
            echo "⏭️ Skipping deployment - DO_ACCESS_TOKEN not configured"
          else
            echo "configured=true" >> $GITHUB_OUTPUT
          fi

      - uses: digitalocean/action-doctl@v2
        if: steps.check_config.outputs.configured == 'true'
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Check OCR health (optional)
        if: steps.check_config.outputs.configured == 'true'
        continue-on-error: true
        run: |
          if curl -fsS https://ocr.insightpulseai.net/health | jq .; then
            echo "✅ OCR service healthy"
          else
            echo "⚠️ OCR service health check failed (non-blocking)"
          fi

      - name: Check Odoo deployment configuration
        if: steps.check_config.outputs.configured == 'true'
        id: check_odoo
        run: |
          if [[ -z "${{ secrets.ODOO_IP }}" ]]; then
            echo "odoo_configured=false" >> $GITHUB_OUTPUT
            echo "⏭️ Skipping Odoo deployment - ODOO_IP not configured"
          else
            echo "odoo_configured=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Odoo
        if: steps.check_odoo.outputs.odoo_configured == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ODOO_IP }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/odoo && docker compose pull && docker compose up -d

      - name: Odoo health check
        if: steps.check_odoo.outputs.odoo_configured == 'true'
        continue-on-error: true
        run: |
          if [[ -n "${{ secrets.ODOO_FQDN }}" ]]; then
            curl -fsS https://${{ secrets.ODOO_FQDN }}/web/login && echo "✅ Odoo is accessible"
          else
            echo "⏭️ ODOO_FQDN not set, skipping health check"
          fi

